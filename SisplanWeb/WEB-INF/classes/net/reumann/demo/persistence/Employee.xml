<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Employee">

    <typeAlias alias="EmployeeObject" type="net.reumann.demo.vo.Employee"/>

    <cacheModel id="employeesCache" type="MEMORY" readOnly="false" serialize="true">
        <flushInterval hours="24"/>
        <flushOnExecute statement="Employee.update"/>
        <flushOnExecute statement="Employee.insert"/>
        <flushOnExecute statement="Employee.delete"/>
    </cacheModel>

    <resultMap id="employeeResult" class="EmployeeObject">
        <result property="employeeId" column="employeeid"/>
        <result property="firstName" column="firstname"/>
        <result property="lastName" column="lastname"/>
        <result property="age" column="age"/>
        <result property="departmentId" column="departmentid"/>
    </resultMap>

    <!-- hsql db used for this example capitalizes col names
         so Map will have them as all caps -->
    <select id="getAll" resultClass="java.util.HashMap" cacheModel="employeesCache">
        SELECT
            employeeid AS EMPLOYEEID,
            firstname AS FIRSTNAME,
            lastname AS LASTNAME,
            AGE,
            department.departmentid AS DEPTID,
            department.name AS DEPTNAME
        FROM employee, department
        WHERE employee.departmentid = department.departmentid
    </select>

    <select id="getById" resultMap="employeeResult" parameterClass="java.lang.Integer">
        SELECT employeeid, firstname, lastname, age, department.departmentid
        FROM employee, department
        WHERE employeeid = #value#
            AND employee.departmentid = department.departmentid
    </select>

    <update id="update" parameterClass="EmployeeObject">
        UPDATE employee
        SET
            firstname = #firstName#,
            lastname = #lastName#,
            age = #age#,
            departmentid = #departmentId#
        WHERE employeeid = #employeeId#
    </update>

    <insert id="insert" parameterClass="EmployeeObject">
        INSERT INTO employee ( employeeid, firstname, lastname, age, departmentid )
        VALUES ( null, #firstName#, #lastName#, #age#, #departmentId# )
    </insert>

    <delete id="delete" parameterClass="java.lang.Integer">
        DELETE FROM employee WHERE employeeid = #value#
    </delete>
</sqlMap>